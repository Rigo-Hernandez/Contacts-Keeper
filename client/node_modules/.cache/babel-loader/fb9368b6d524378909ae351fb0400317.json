{"ast":null,"code":"import _slicedToArray from \"/Users/rigohernandez/Documents/Development/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rigohernandez/Documents/Development/contactKeeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport ContactContext from './contactContext';\nimport axios from 'axios';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, CLEAR_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // update contact\n\n\n  const updateContact = async contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Get Contacts\n\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(\"/api/contacts/\".concat(id));\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Clear contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear currnt contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //filter contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/rigohernandez/Documents/Development/contactKeeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","ContactContext","axios","contactReducer","GET_CONTACTS","CLEAR_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","updateContact","contact","type","payload","getContacts","res","get","data","err","response","msg","addContact","config","headers","post","deleteContact","id","delete","clearContacts","setCurrent","clearCurrent","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport ContactContext from './contactContext';\nimport axios from 'axios';\nimport contactReducer from './contactReducer';\nimport {\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // update contact\n    const updateContact = async contact => {\n      dispatch({ type: UPDATE_CONTACT, payload: contact });\n    };\n\n  //Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n\n      dispatch({ type: GET_CONTACTS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n  };\n\n  //Add Contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n  };\n\n  //Delete Contact\n  const deleteContact = async id => {\n    try {\n     await axios.delete(`/api/contacts/${id}`);\n\n     dispatch({ type: DELETE_CONTACT, payload: id });\n    } catch (err) {\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\n    }\n\n  };\n  //Clear contacts\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  //Set current contact\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  //Clear currnt contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  //filter contact\n  const filterContacts = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n  //Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n        getContacts,\n        clearContacts\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}