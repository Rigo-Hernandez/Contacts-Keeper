{"ast":null,"code":"import _slicedToArray from \"/Users/rigohernandez/Documents/Development/contactKeeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rigohernandez/Documents/Development/contactKeeper/client/src/context/alert/AlertState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const _useReducer = useReducer(alertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Set Alert\n\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/rigohernandez/Documents/Development/contactKeeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","uuid","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","v4","payload","setTimeout","alerts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACEC,SADF,EAEEC,YAFF,QAIO,UAJP;;AAMA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG,EAArB;;AAD0B,sBAGAR,UAAU,CAACG,YAAD,EAAeK,YAAf,CAHV;AAAA;AAAA,QAGnBC,KAHmB;AAAA,QAGZC,QAHY,oBAK1B;;;AACE,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAKC,IAAL,EAAWC,OAAO,GAAG,IAArB,KAA6B;AAC1C,UAAMC,EAAE,GAAGd,IAAI,CAACe,EAAL,EAAX;AACAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,SADD;AAELa,MAAAA,OAAO,EAAE;AAAEL,QAAAA,GAAF;AAAMC,QAAAA,IAAN;AAAWE,QAAAA;AAAX;AAFJ,KAAD,CAAR;AAIAG,IAAAA,UAAU,CAAC,MAAMR,QAAQ,CAAE;AAAEG,MAAAA,IAAI,EAAER,YAAR;AAAsBY,MAAAA,OAAO,EAACF;AAA9B,KAAF,CAAf,EAAsDD,OAAtD,CAAV;AACH,GAPD;;AASF,SACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,MAAM,EAAEV,KADH;AAELE,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,KAAK,CAACa,QANT,CADF;AAUD,CAzBD;;AA2BA,eAAed,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid'\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport {\n  SET_ALERT,\n  REMOVE_ALERT,\n\n} from '../types';\n\nconst AlertState = props => {\n  const initialState = []\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  //Set Alert\n    const setAlert = (msg,type, timeout = 5000) =>{\n        const id = uuid.v4();\n        dispatch({\n            type: SET_ALERT,\n            payload: { msg,type,id }\n        })\n        setTimeout(() => dispatch ({ type: REMOVE_ALERT, payload:id }), timeout)\n    }\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}